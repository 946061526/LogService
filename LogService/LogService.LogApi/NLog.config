<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd"
  autoReload="true"
  throwExceptions="false"
  internalLogLevel="Error" internalLogFile="c:\nlogs\internal.log">

	<!--日志级别：Trace,Debug,Info,Warn,Error,Fatal-->

	<!--当不仅仅只使用 NLog 这一个基础的 dll ，并使用了一些基于 NLog 扩展的工具时，
  需要在 extensions 节点下面添加引用的程序集名称-->
	<extensions>
		<add assembly="NLog.Web.AspNetCore"/>
	</extensions>

	<targets>
		<!--文本-->
		<target type='File'  name='File'
                    fileName='${basedir}/NLogs/${date:format=yyyy-MM}/${level}/${shortdate}.log'
                    layout ='${longdate}|${level}|${processid}${newline}message:${message}${newline}exception:${exception:format=tostring}${newline}'
                    archiveFileName='${basedir}/NLogs/${date:format=yyyy-MM}/${level}/${shortdate}.log'
                    archiveAboveSize = '2097152'
                    archiveNumbering = 'Sequence'
                    concurrentWrites = 'true'
                    keepFileOpen = 'true'
                    openFileCacheTimeout = '30'
                    />

		<!--写入数据库-->
		<!--MySql
		
CREATE TABLE `loginfo` (
  `id` varchar(32) NOT NULL,
  `user_name` varchar(50) CHARACTER SET utf8mb4 DEFAULT NULL,
  `message` text CHARACTER SET utf8mb4 COMMENT '日志内容',
  `exception` text CHARACTER SET utf8mb4,
  `object_key` varchar(100) CHARACTER SET utf8mb4 DEFAULT NULL COMMENT '操作对象ID',
  `module_type` varchar(100) CHARACTER SET utf8mb4 DEFAULT NULL COMMENT '服务日志、通道日志',
  `level` varchar(20) CHARACTER SET utf8mb4 DEFAULT NULL COMMENT 'trace,debug,warning,info,error',
  `ip` varchar(50) CHARACTER SET utf8mb4 DEFAULT NULL,
  `log_time` datetime DEFAULT NULL COMMENT '日志时间',
  `time_stamp` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `index_log_level` (`level`),
  KEY `index_log_time` (`log_time`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-->
		<!--<connectionString>server=127.0.0.1;Database=RootlinkLogs;user id=root;password=sa@123;SslMode=none</connectionString>-->
		<target xsi:type="Database" name="MySql"
				dbProvider="MySql.Data.MySqlClient.MySqlConnection, MySql.Data"
				commandType="Text">
			<connectionString>${var:MySqlConn}</connectionString>
			<commandText>
				INSERT INTO loginfo(id, user_name, message, exception, object_key, module_type, level, ip, log_time, time_stamp)
				VALUES (@id, @user_name, @message,@exception, @object_key, @module_type, @level, @ip, @log_time, @time_stamp);
			</commandText>
			<parameter name = "@id" layout = "${event-properties:item=id}"/>
			<parameter name = "@user_name" layout = "${event-properties:item=user_name}"/>
			<parameter name = "@message" layout="${message}" />
			<parameter name = "@exception" layout = "${event-properties:item=exception}"/>
			<parameter name = "@object_key" layout = "${event-properties:item=object_key}"/>
			<parameter name = "@module_type" layout = "${event-properties:item=module_type}"/>
			<parameter name = "@level" layout="${level}" />
			<parameter name = "@ip" layout = "${event-properties:item=ip}"/>
			<parameter name = "@log_time" layout = "${longdate}"/>
			<parameter name = "@time_stamp" layout = "${event-properties:item=time_stamp}"/>
		</target>

		<!-- PostgreSql
		
CREATE TABLE IF NOT EXISTS public.loginfo
(
    id character varying(32) COLLATE pg_catalog."default" NOT NULL, /*主键*/
    user_name character varying(30) COLLATE pg_catalog."default",	/*用户*/
    message text COLLATE pg_catalog."default",						/*日志内容*/
    exception text COLLATE pg_catalog."default",					/*异常内容*/
    object_key character varying(100) COLLATE pg_catalog."default",	/*操作对象*/
    module_type character varying(100) COLLATE pg_catalog."default",/*类型*/
    level character varying(10) COLLATE pg_catalog."default",		/*等级（Trace, Debug, Info, Warn, Error）*/
    ip character varying(50) COLLATE pg_catalog."default",			/*IP*/
    log_time timestamp without time zone,							/*日志时间(yyyy-MM-dd HH:mm:ss)*/
    time_stamp bigint,												/*时间戳*/
    CONSTRAINT loginfo_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.loginfo
    OWNER to postgres;

CREATE INDEX IF NOT EXISTS index_log_level
    ON public.loginfo USING btree
    (level COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE pg_default;

CREATE INDEX IF NOT EXISTS index_log_time
    ON public.loginfo USING btree
    (log_time ASC NULLS LAST)
    TABLESPACE pg_default;

-->
		<!--<connectionString>server=localhost;database=RootlinkLogs;uid=postgres;pwd=sa@123;</connectionString>-->
		<target xsi:type="Database" name="PostgreSql"
				dbProvider="Npgsql.NpgsqlConnection, Npgsql"
				commandType="Text">
			<connectionString>${var:PostgreSqlConn}</connectionString>
			<commandText>
				INSERT INTO loginfo(id, user_name, message, exception, object_key, module_type, level, ip, log_time, time_stamp)
				VALUES (:id, :user_name, :message, :exception, :object_key, :module_type, :level, :ip, :log_time, :time_stamp);
			</commandText>

			<parameter name = "@id" layout = "${event-properties:item=id}"/>
			<parameter name = "@user_name" layout = "${event-properties:item=user_name}"/>
			<parameter name = "@message" layout="${message}" />
			<parameter name = "@exception" layout = "${event-properties:item=exception}"/>
			<parameter name = "@object_key" layout = "${event-properties:item=object_key}"/>
			<parameter name = "@module_type" layout = "${event-properties:item=module_type}"/>
			<parameter name = "@level" layout="${level}" />
			<parameter name = "@ip" layout = "${event-properties:item=ip}"/>
			<parameter name = "@log_time" layout = "${date}" dbType="DbType.DateTime"/>
			<parameter name = "@time_stamp" layout = "${event-properties:item=time_stamp}" dbType="DbType.Int64"/>
		</target>

		<!-- Sqlite
		
CREATE TABLE [loginfo](
  [id] NVARCHAR(32) PRIMARY KEY NOT NULL, 
  [user_name] NVARCHAR(30), 
  [message] TEXT, 
  [exception] TEXT, 
  [object_key] NVARCHAR(100), 
  [module_type] NVARCHAR(100), 
  [level] NVARCHAR(10), 
  [ip] NVARCHAR(50), 
  [log_time] DATETIME, 
  [time_stamp] BIGINT DEFAULT 0);

CREATE INDEX [log_ind_level] ON [loginfo]([level]);

CREATE INDEX [log_ind_time] ON [loginfo]([time_stamp]);

-->
		<!--connectionString = "Data Source=c:\\nlogs\\RootlinkLogs.db;"-->
		<target type="Database" name = "Sqlite"  keepConnection="false" useTransactions = "true"
				dbProvider = "System.Data.SQLite.SQLiteConnection, System.Data.SQLite"
				commandType="Text">
			<connectionString>${var:SqliteConn}</connectionString>
			<commandText>
				INSERT INTO loginfo(id, user_name, message, exception, object_key, module_type, level, ip, log_time, time_stamp)
				VALUES (@id, @user_name, @message,@exception, @object_key, @module_type, @level, @ip, @log_time, @time_stamp);
			</commandText>
			<parameter name = "@id" layout = "${event-properties:item=id}"/>
			<parameter name = "@user_name" layout = "${event-properties:item=user_name}"/>
			<parameter name = "@message" layout="${message}" />
			<parameter name = "@exception" layout = "${event-properties:item=exception}"/>
			<parameter name = "@object_key" layout = "${event-properties:item=object_key}"/>
			<parameter name = "@module_type" layout = "${event-properties:item=module_type}"/>
			<parameter name = "@level" layout="${level}" />
			<parameter name = "@ip" layout = "${event-properties:item=ip}"/>
			<parameter name = "@log_time" layout = "${longdate}"/>
			<parameter name = "@time_stamp" layout = "${event-properties:item=time_stamp}"/>
		</target >

	</targets>

	<!--规则-->
	<rules>
		<!--Skip non-critical Microsoft logs and so log only own logs-->
		<!--<logger name="Microsoft.*" minlevel="Trace" maxLevel="Info" writeTo="blackhole" final="true" />-->

		<!--保存至文件-->
		<logger name="File" minlevel="Trace" writeTo="File" />

		<!--保存至数据库-->
		<logger name="MySql" minlevel="Trace" writeTo="MySql" />
		<logger name="PostgreSql" minlevel="Trace" writeTo="PostgreSql" />
		<logger name="Sqlite" minlevel="Trace" writeTo="Sqlite" />

	</rules>
</nlog>